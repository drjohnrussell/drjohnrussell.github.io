devtools::install_github('jimjam-slam/ggflags')
install.packages("devtools")
devtools::install_github('jimjam-slam/ggflags')
library(tidytuesdayR)
library(tidyverse)
library(countrycode) #this package looks up ISO codes, which can be useful
library(ggflags) #pulls flags
library(gganimate) #animations
dat <- tidytuesdayR::tt_load(2024, week = 45)
democracy <- dat$democracy_data
head(democracy)
democracy <- democracy |>
## removing colonies as much as possible to get down to countries
filter(!is.na(regime_category_index),
## British Virgin Islands oddly keeps showing up in spite of status as colony
country_code!="VGB")
library(tidytuesdayR)
library(tidyverse)
library(countrycode) #this package looks up ISO codes, which can be useful
library(ggflags) #pulls flags
library(gganimate) #animations
dat <- tidytuesdayR::tt_load(2024, week = 45)
democracy <- dat$democracy_data
head(democracy)
democracy <- democracy |>
## removing colonies as much as possible to get down to countries
filter(!is.na(regime_category_index),
## British Virgin Islands oddly keeps showing up in spite of status as colony
country_code!="VGB")
democracyfilter <- democracy |>
janitor::tabyl(country_name,has_free_and_fair_election) |>
filter(`TRUE` > 0 & `FALSE` > 0)
democraticchanges <- democracy |>
inner_join(democracyfilter) |>
mutate(iso2=countrycode(country_name,"country.name","iso2c"),
continent = countrycode(iso2, "iso2c", "continent")) |>
arrange(continent,`FALSE`) |>
mutate(country_name=fct_inorder(country_name))
## Let's create the y-labels for later on
y_lab <- democraticchanges |>
distinct(country_name,iso2,continent)  |>
mutate(y_mid = as.numeric(country_name),
name=country_name)
## For Africa
Africa <- democraticchanges |>
filter(continent=="Africa") |>
ggplot(aes(xmin=year, #left boundary of the rectangle
xmax=year+1, #right boundary of the rectangle
ymin=as.numeric(country_name)-.3, #lower boundary of the rectangle
ymax=as.numeric(country_name)+.3, #upper boundary of the rectangle
fill=has_free_and_fair_election)) +
geom_rect() +
# now let's plot flags between the rectangles and the y axis
ggflags::geom_flag(data=y_lab |>
filter(continent=="Africa"),
mapping=aes(y=y_mid,
country=tolower(iso2), #ggflags needs lowercase iso2 to work
x=1945),
inherit.aes=FALSE) + #we want this to be individual to this layer
#now to rename the y axis
scale_y_continuous(breaks=y_lab$y_mid,labels=y_lab$country_name) +
theme_minimal() +
theme(legend.position="bottom",
legend.text=element_text(size=7),
legend.title=element_text(size=7)) +
labs(x="",
y="",
fill="Has Free and Fair Elections") +
scale_fill_brewer(palette="Set1") +
facet_wrap(~continent,ncol=1,scales="free",strip.position="right")
Europe <- democraticchanges |>
filter(continent=="Europe") |>
ggplot(aes(xmin=year,
xmax=year+1,
ymin=as.numeric(country_name)-.3,
ymax=as.numeric(country_name)+.3,
fill=has_free_and_fair_election)) +
geom_rect() +
ggflags::geom_flag(data=y_lab |>
filter(continent=="Europe"),
mapping=aes(y=y_mid,country=tolower(iso2),x=1945),inherit.aes=FALSE) +
scale_y_continuous(breaks=y_lab$y_mid,labels=y_lab$country_name) +
theme_minimal() +
theme(legend.position="bottom",
legend.text=element_text(size=7),
legend.title=element_text(size=7)) +
labs(x="",
y="",
fill="Has Free and Fair Elections") +
scale_fill_brewer(palette="Set1") +
facet_wrap(~continent,ncol=1,scales="free",strip.position="right")
## Let's take advantage of patchwork to plot these graphs next to each other with a common legend
library(patchwork)
Europe + Africa + plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
